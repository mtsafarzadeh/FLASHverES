
Driver/DriverMain
    allowDtSTSDominate [BOOLEAN] [FALSE]
        allow a situation in which dt_STS becomes larger than dt_Hydro
        (dt_advection) (assuming that diffusion dt is smaller than advection dt)
        upto advection one, but not faster than the advection advancement. This
        will be useful in solving PDE systems that are hyperbolic + parabolic.
        FALSE will use the STS algorithm to even accelerate advection time
        advancement, which in turn, will use larger advection dt than advection
        dt from CFL limits. This will be useful in solving only hyperbolic PDE
        systems in general. When hyperbolic + parabolic PDE system is to be
        solved, then we suggest that users use less agressive super time
        stepping method by using useSTSforDiffusion = TRUE.
    dr_abortPause [INTEGER] [2]
        Valid Values: 0 to INFTY
        When Driver_abortFlash is called to abnormally end execution, and
        dr_abortPause is grater than zero, the FLASH Driver_abortFlash code will
        sleep for dr_abortPause seconds after writing explanatory messages (to
        standard output and, possibly, to log files) but before calling
        MPI_ABORT. See also eachProcWritesOwnAbortLog for controlling the
        generation of per-processor log files.
    dr_printTStepLoc [BOOLEAN] [TRUE]

    dr_shortenLastStepBeforeTMax [BOOLEAN] [FALSE]
        If TRUE, make the dt for the last time step shorter if necassary so as
        to avoid overshooting tmax.
    dr_tstepSlowStartFactor [REAL] [0.1]
        Valid Values: 0.0 to INFTY
        The initial dt is set to be at most the timestep computed by CFL
        conditions applied to certain operators multiplied with this factor.
    drift_break_inst [INTEGER] [0]
        Valid Values: Unconstrained

    drift_trunc_mantissa [INTEGER] [2]
        Valid Values: Unconstrained
        number of mantissa bits to exclude from hash (3 bits ~ 1 sigdig)
    drift_tuples [BOOLEAN] [FALSE]
        should block data be written in python tuples format
    drift_verbose_inst [INTEGER] [0]
        Valid Values: Unconstrained

    dtinit [REAL] [1.E-10]
        Valid Values: Unconstrained
        Initial timestep
    dtmax [REAL] [1.E5]
        Valid Values: Unconstrained
        Maximum timestep
    dtmin [REAL] [1.E-10]
        Valid Values: Unconstrained
        Minimum timestep
    eachProcWritesOwnAbortLog [BOOLEAN] [FALSE]
        Should each process writes messages to its own log file when
        Driver_abortFlash gets called to abnormally end execution? If true, each
        process in which Driver_abortFlash is called will attempt to write an
        explanatory message to its own log file, whether that file already
        existed or needs to be newly created.  If false, the Driver_abortFlash
        message will appear only in the regular log file (if the Logfile code
        unit is used), and normally only when Driver_abortFlash is called by the
        process with PE 0.
    iProcs [INTEGER] [1]
        Valid Values: Unconstrained
        number of procs in the i dir
    jProcs [INTEGER] [1]
        Valid Values: Unconstrained
        number of procs in the j dir
    kProcs [INTEGER] [1]
        Valid Values: Unconstrained
        number of procs in the k dir
    meshCopyCount [INTEGER] [1]
        Valid Values: Unconstrained
        The number of copies of full computational mesh that
    nbegin [INTEGER] [1]
        Valid Values: 1 to INFTY
        First timestep
    nend [INTEGER] [100]
        Valid Values: Unconstrained
        Maximum number of timesteps to take
    nstepTotalSTS [INTEGER] [5]
        Valid Values: Unconstrained

    nuSTS [REAL] [0.1]
        Valid Values: Unconstrained
        nu stability parameter for super time stepping algorithm
    restart [BOOLEAN] [FALSE]
        Is this a restart run?
    sweepOrder [INTEGER] [123]
        Valid Values: 123, 132, 213, 231, 312, 321
        Determine the order of the directional sweeps
    threadBlockListBuild [BOOLEAN] CONSTANT [FALSE]

    threadDriverBlockList [BOOLEAN] [FALSE]

    threadDriverWithinBlock [BOOLEAN] [FALSE]

    threadRayTraceBuild [BOOLEAN] CONSTANT [FALSE]

    threadWithinBlockBuild [BOOLEAN] CONSTANT [FALSE]

    tinitial [REAL] [0.0]
        Valid Values: Unconstrained
        Initial simulation time
    tmax [REAL] [0.2]
        Valid Values: Unconstrained
        Maximum simulation time
    tstep_change_factor [REAL] [2.0]
        Valid Values: 0.0+ to INFTY
        The initial time step dt is multiplied with this factor at every
        timestep, until it is limited by CFL condition, allowing users to
        specify a very conservative initial dt and letting it grow by specifying
        a tstep_change_factor > 1.0.
    useSTS [BOOLEAN] [FALSE]
        Do we want to use super time stepping (STS) algorithm?
    useSTSforDiffusion [BOOLEAN] [FALSE]
        TRUE will use the STS algorithm to accelerate diffusion time advancement
    wall_clock_time_limit [REAL] [604800.]
        Valid Values: -1.0, 0.0 to INFTY
        Total wall clock time limit (seconds). Use -1.0 for no limit.
    zFinal [REAL] [0.0]
        Valid Values: Unconstrained
        The final redshift in a simulation.  The simulation will stop
    zInitial [REAL] [-1.0]
        Valid Values: Unconstrained
        The initial redshift in a simulation.  < 0 if not being used.

Grid/GridMain
    bndPriorityOne [INTEGER] [1]
        Valid Values: 1, 2, 3
        indicates which direction (IAXIS, JAXIS, or KAXIS) gets top priority
        when applying boundary conditions in corner guardcells We define three
        values for edges left, center, right, of which center represents
        interior, while left and right represent the corresponding guardcells.
        We define a corner where more than one dimension has its its guardcells,
        so the application must determine which direction gets to fill them. In
        2-D, there are four corners: (left,left), (left,right), (right,left) and
        (right,right). In 3-D case, the following corners are possible :
        (left,left,left),(left,left,center),
        (left,left,right),(left,center,left),
        (left,center,right),(left,right,left),
        (left,right,center),(left,right,right)
        (center,left,left),(center,left,right),
        (center,right,left),(center,right,right),
        (right,left,left),(right,left,center),
        (right,left,right),(right,center,left),
        (right,center,right),(right,right,left),
        (right,right,center),(right,right,right)
    bndPriorityThree [INTEGER] [3]
        Valid Values: 1, 2, 3
        the least priority dimension in applying boundary conditions
    bndPriorityTwo [INTEGER] [2]
        Valid Values: 1, 2, 3
        the second priority dimension in applying boundary conditions
    convertToConsvdForMeshCalls [BOOLEAN] [FALSE]
        indicates if appropriate variables are converted from primitive to
        conserved form during propagation before control is passed to Paramesh
        for refinement, derefinement, or guardcell filling.  This is the old way
        of ensuring that solution variables are in the correct form for
        interpolation. It involves unnecessary conversions back and forth and
        should be obsoleted by the newer mechanism enabled by runtime parameter
        "convertToConsvdInMeshInterp".  The name is a replacement for the old
        "conserved_var" which many people have found to be very confusing
        terminology.
    eosMode [STRING] ["dens_ie"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_ie_sele_gather",
        "dens_temp_equi", "dens_temp_all", "dens_temp_gather",
        "dens_ie_recal_gather"
        determines how to operate on thermodynamic quantities. Possible values
        are "dens_ie", where density and internal energy are supplied and
        pressure and temperature are returned; "dens_pres", where density and
        pressure are given and energy and temperature are computed;  and
        "dens_temp", where density and temperature are given and pressure and
        energy are computed. Other values may also be available as, depending on
        whether a multiTemp Eos is used and on implementation of additional
        physics. For 3T simulations, the best choice is "dens_ie_recal_gather",
        since this mode will ensure that total energy is conserved when
        refinement changes occur.
    eosModeInit [STRING] ["dens_ie"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_temp_equi", "dens_temp_all",
        "dens_temp_gather", "eos_nop"
        determines how to operate on thermodynamic quantities for the initial
        conditions.  A call to Simulation_initBlock sets initial conditions on
        each block, and an eos call follows which ensures the initial values are
        thermodynamically consistent.  The value of eosModeInit determines the
        mode in which these eos calls operate.  Possible values are "dens_ie",
        where density and internal energy are supplied and pressure and
        temperature are returned; "dens_pres", where density and pressure are
        given and energy and temperature are computed; and "dens_temp", where
        density and temperature are given and pressure and energy are computed. 
        Other values may also be available as, depending on whether a multiTemp
        Eos is used and on implementation of additional physics.
    geometry [STRING] ["cartesian"]
        Valid Values: "cartesian", "polar", "cylindrical", "spherical"
        Grid geometry
    geometryOverride [BOOLEAN] [FALSE]
        whether to bypass some geometry sanity checks - use at your own risk.
    gr_bcEnableApplyMixedGds [BOOLEAN] [TRUE]
        whether to enable the Grid_bcApplyToRegionMixedGds interface for
        implementing boundary conditions with access to the variables of mixed
        GDSs (in particlular, cell-centered UNK varsiables and face variables).
        This only has an effect if the GridBoundaryConditions subunit is
        included and the simulation actually supplies an implementation of
        Grid_bcApplyToRegionMixedGds.
    reduceGcellFills [BOOLEAN] [FALSE]

    smalle [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for energy
    smallx [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for abundances
    unbiased_geometry [BOOLEAN] [FALSE]
        attempt to remove floating point bias from geometry discretization. Not
        implemented in FLASH3.
    xl_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower (left) boundary condition in x dir
    xmax [REAL] [1.]
        Valid Values: Unconstrained
        physical domain upper bound in x dir
    xmin [REAL] [0.]
        Valid Values: Unconstrained
        physical domain lower bound in x dir
    xr_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper (right) boundary condition in x dir
    yl_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in y dir
    ymax [REAL] [1.]
        Valid Values: Unconstrained
        physical domain upper bound in y dir
    ymin [REAL] [0.]
        Valid Values: Unconstrained
        physical domain lower bound in y dir
    yr_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in y dir
    zl_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in z dir
    zmax [REAL] [1.]
        Valid Values: Unconstrained
        physical domain lower bound in x dir
    zmin [REAL] [0.]
        Valid Values: Unconstrained
        physical domain lower bound in z dir
    zr_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in z dir

Grid/GridMain/UG
    compute_grid_size [BOOLEAN] [true]
        compute grid size in the case of non-fixed-block size, non fixed block
        size mode means block dims are not specified at compile time
    flux_correct [BOOLEAN] [false]
        turns flux correction on or off in UG always false since all blocks on
        same level
    iGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the i direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    iguard [INTEGER] [4]
        Valid Values: Unconstrained
        number of guardcells in i direction, not yet used. Meant for nofbs.
    jGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the j direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    jguard [INTEGER] [4]
        Valid Values: Unconstrained
        number of guardcells in j direction, not yet used. Meant for nofbs.
    kGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the k direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    kguard [INTEGER] [4]
        Valid Values: Unconstrained
        number of guardcells in k direction, not yet used. Meant for nofbs.
    nblockx [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along X - ignored by UG Grid
    nblocky [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along Y - ignored by UG Grid
    nblockz [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along Z - ignored by UG Grid
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density

IO/IOMain
    alwaysComputeUserVars [BOOLEAN] [true]
        Allows the user to force the computation of user variables (i.e. those
        computed by Grid_computeUserVars) for all checkpoint files.  Defaults to
        true.  If set to false, lone calls to IO_writeCheckpoint will not call
        Grid_computeUserVars.  Plotfiles always call Grid_computeUserVars.
    alwaysRestrictCheckpoint [BOOLEAN] [true]
        Allows the user to choose whether checkpoint file data is always
        restricted, so all ancestor blocks have valid data. The default is true.
        It can be set to false for debugging purposes, in which case only the
        data from IO_output will be guaranteed to have fully restricted data. 
        See the User's guide for more information.
    bytePack [BOOLEAN] [FALSE]
        compress plotfile data to bytes !!Only implemented with UG in hdf5 !!!
        !!Not tested
    checkpointFileIntervalStep [INTEGER] [0]
        Valid Values: Unconstrained
        Checkpoint after this many steps
    checkpointFileIntervalTime [REAL] [1.]
        Valid Values: Unconstrained
        Checkpoint after this much time
    checkpointFileIntervalZ [REAL] [HUGE(1.)]
        Valid Values: Unconstrained

    checkpointFileNumber [INTEGER] [0]
        Valid Values: Unconstrained
        Initial checkpoint file number (used for restarts as well)
    chkGuardCellsInput [BOOLEAN] CONSTANT [FALSE]
        if true guardcells are read from the checkpoint file. Default is false
        where only interior cells are read. Currently only implemented with hdf5
        parallel paramesh IO implementation
    chkGuardCellsOutput [BOOLEAN] CONSTANT [FALSE]
        if true guardcells are written the checkpoint file. Default is false
        where only interior cells are written. Currently only implemented with
        hdf5 parallel paramesh IO implementation
    corners [BOOLEAN] [FALSE]
        does nothing.  However, it is part of the checkpoint file specification,
        so we retain the checkpoint entry, but force it to be .false.. It was
        used in FLASH2 to interpolate the data to the zone corners before
        storing the data in the plotfile (for creating improved iso-surfaces).
    fileFormatVersion [INTEGER] [9]
        Valid Values: Unconstrained
        Integer value specifying the file format type
    forcedPlotFileNumber [INTEGER] [0]
        Valid Values: Unconstrained

    ignoreForcedPlot [BOOLEAN] [false]

    io_writeMscalarIntegrals [BOOLEAN] [FALSE]
        Should density integrals for all mass scalars be written to the
        stats_file (.dat file)?  This runtime parameter is handled in the
        default IO_writeIntegralQuantities implementation in IOMain, and may
        have no effect if a simulation overrides that implementation.
    memory_stat_freq [INTEGER] [100000]
        Valid Values: Unconstrained
        Specify the number of timesteps between memory statistic dumps to
        flash.log !!NOT Yet Implemented in F3
    outputSplitNum [INTEGER] [1]
        Valid Values: Unconstrained
        Split checkpoint, plotfiles, particle plots into this many files per
        dump Not fully implemented, only hdf5 parallel. use at own risk
    output_directory [STRING] [""]
        Valid Values: Unconstrained
        output dir for checkpoint file, can be absolute or relative path
    plotFileIntervalStep [INTEGER] [0]
        Valid Values: Unconstrained
        Write a plotfile after this many steps
    plotFileIntervalTime [REAL] [1.]
        Valid Values: Unconstrained
        Write a plotfile after this much time
    plotFileIntervalZ [REAL] [HUGE(1.)]
        Valid Values: Unconstrained
        Write a plotfile after this change in z
    plotFileNumber [INTEGER] [0]
        Valid Values: Unconstrained
        Initial plot file number
    plot_grid_var_1 [STRING] ["none"]
        Valid Values: Unconstrained
        Allows user to output specific scratch grid vars Up to 12 choices are
        allowed.  If plot_grid_var_X is set to "none" then no variable will be
        saved. The parameter should have the same name as the variable
        corresponding to it. For exampe, if a variable is declared GRID_VAR
        vrtz, to write that grid variable to a plotfile a parameter should be
        declared as PARAMETER plot_grid_var_X STRING "vrtz"
    plot_grid_var_10 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_11 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_12 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_2 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_3 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_4 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_5 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_6 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_7 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_8 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_9 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_1 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_10 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_11 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_12 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_13 [STRING] ["none"]
        Valid Values: Unconstrained
        (automatically generated by setup)
    plot_var_14 [STRING] ["none"]
        Valid Values: Unconstrained
        (automatically generated by setup)
    plot_var_2 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_3 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_4 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_5 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_6 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_7 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_8 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_9 [STRING] ["none"]
        Valid Values: Unconstrained

    plotfileGridQuantityDP [BOOLEAN] [false]
        If true, this sets the grid variables (unk, facevars, etc.) to be output
        in double precision in plotfiles. Default value is false.
    plotfileMetadataDP [BOOLEAN] [false]
        Sets the floating point grid metadata fields to be written in double
        precision if true in plotfiles.  Default value is false
    prof_file [STRING] ["profile.dat"]
        Valid Values: Unconstrained
        !!NOT yet implemented yet in F3
    rolling_checkpoint [INTEGER] [10000]
        Valid Values: Unconstrained
        Checkpoint file number cycling span. Only the last rolling_checkpoint
        files are kept.
    rss_limit [REAL] [-1.0]
        Valid Values: Unconstrained
        Maximum value (in MB) of largest resident set size (rss) before we
        checkpoint and exit. Negative for no limit.  Only active if memory
        statistics are being kept.
    stats_file [STRING] ["flash.dat"]
        Valid Values: Unconstrained
        Name of the file integral quantities are written to (.dat file)
    summaryOutputOnly [BOOLEAN] [false]
        Makes FLASH write integrated quantities, i.e. summary data, only. FLASH
        will only write a checkpoint, plot, or particle file if the user creates
        a .dump_plotfile, .dump_checkpoint, .dump_restart, or
        .dump_particle_file file.  A .kill file will still kill FLASH.
    typeMatchedXfer [BOOLEAN] [true]
        Ensures that floating point data transfers are type matched when using
        HDF5.  This prevents HDF5 reverting to independent parallel I/O.
    useCollectiveHDF5 [BOOLEAN] [true]
        If true, all non-header, non-list datasets will be written using HDF5's
        collective output mode otherwise, the independent access mode is used. 
        Default value is true.
    useLegacyLabels [BOOLEAN] [true]
        If true, this stores mesh labels e.g. 'dens', 'pres' in a IO library
        dataspace of 4 characters.  We may want to set it to false to use larger
        labels e.g. 'density'
    wall_clock_checkpoint [REAL] [43200.]
        Valid Values: Unconstrained
        Checkpoint after XX seconds (wallclock time) This is useful to ensure
        that the job outputs a restart file before a queue window closes.
    wr_integrals_freq [INTEGER] [1]
        Valid Values: Unconstrained
        Number of timesteps between writing to flash.dat

Particles
    useParticles [BOOLEAN] [FALSE]
        Whether to advance particles [TRUE] or not [FALSE]

PhysicalConstants/PhysicalConstantsMain
    pc_unitsBase [STRING] ["CGS"]
        Valid Values: Unconstrained
        Base Unit system for Physical Constants -- can be "CGS" or "MKS"

Simulation/SimulationMain
    basenm [STRING] ["flash_"]
        Valid Values: Unconstrained
        Base name for output files

Simulation/SimulationMain/StirTurbHydro
    c_ambient [REAL] [1.e0]
        Valid Values: Unconstrained
        reference sound speed
    mach [REAL] [0.3]
        Valid Values: Unconstrained
        reference mach number
    rho_ambient [REAL] [1.e0]
        Valid Values: Unconstrained
        reference density

monitors/Logfile/LogfileMain
    log_file [STRING] ["flash.log"]
        Valid Values: Unconstrained
        Name of log file to create
    run_comment [STRING] ["FLASH 3 run"]
        Valid Values: Unconstrained
        Comment for run
    run_number [STRING] ["1"]
        Valid Values: Unconstrained
        Identification number for run

monitors/Timers/TimersMain/MPINative
    eachProcWritesSummary [BOOLEAN] [FALSE]
        Should each process write its summary to its own file?  If true, each
        process will write its summary to a file named timer_summary_<processor
        id>
    writeStatSummary [BOOLEAN] [TRUE]
        Should timers write the max/min/avg values for timers?

physics/Cosmology
    useCosmology [BOOLEAN] CONSTANT [FALSE]
        whether to use the Cosmology implementation or not

physics/Diffuse
    useDiffuse [BOOLEAN] CONSTANT [FALSE]
        flags whether the Diffuse unit is being used at all

physics/Eos/EosMain
    eintSwitch [REAL] [0.0]
        Valid Values: Unconstrained
        a rarely used switch which ensures that internal energy calculations
        maintain sufficient precision. Important only if energyTotal is
        dominated by energyKinetic. If (energyInternal <
        eintSwitch*energyKinetic) then some routines (Eos/Helmholtz,
        Hydro/hy_updateSoln) will NOT calculate energyInternal by subtraction,
        but rather through direct calculation.
    eos_entrEleScaleChoice [INTEGER] [6]
        Valid Values: 1 to 8
        selects a scale variant for representing electron entropy. See code in
        eos_idealGamma for the meaning of the various choices. The choice that
        corresponds most closely to the Sackur-Tetrode equation in physical
        units should be 3, closely followed by 2.
    eos_singleSpeciesA [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Nucleon number for the gas (available ONLY for Eos with single species)
    eos_singleSpeciesZ [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Proton number for the gas (available ONLY for Eos with single species)
    gamma [REAL] [1.6667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for gas (available ONLY for Eos/Gamma)
    threadEosWithinBlock [BOOLEAN] [FALSE]


physics/Gravity
    grav_boundary_type [STRING] ["isolated"]
        Valid Values: Unconstrained
        Type of gravitational boundary condition if a Poisson solve is used for
        Gravity; string-valued version of grav_boundary. Accepts: "isolated",
        "periodic", "dirichlet", and maybe others, depending on the Poisson
        solver used. This is declared in the stub level of the Gravity unit to
        allow the Grid unit to refer to this runtime parameter even when no
        Gravity implementation is included.
    useGravity [BOOLEAN] [FALSE]
        Whether gravity calculations should be performed.

physics/Hydro/HydroMain
    UnitSystem [STRING] ["none"]
        Valid Values: Unconstrained
        System of Units
    cfl [REAL] [0.8]
        Valid Values: Unconstrained
        Courant factor
    irenorm [INTEGER] [0]
        Valid Values: Unconstrained
        Renormalize the abundances before eos
    threadHydroBlockList [BOOLEAN] [FALSE]

    threadHydroWithinBlock [BOOLEAN] [FALSE]

    updateHydroFluxes [BOOLEAN] [TRUE]
        whether fluxes computed by Hydro should be used to update the solution
        (currently, probably only used in split PPM Hydro)
    useHydro [BOOLEAN] [TRUE]

    use_cma_advection [BOOLEAN] [FALSE]

    use_cma_flattening [BOOLEAN] [FALSE]
        use the flattening procedure for the abundances as described in the CMA
        paper
    use_cma_steepening [BOOLEAN] [FALSE]


physics/Hydro/HydroMain/unsplit
    LimitedSlopeBeta [REAL] [1.0]
        Valid Values: Unconstrained
        Any real value specific for the Limited Slope limiter
    RiemannSolver [STRING] ["Roe"]
        Valid Values: Unconstrained
        Roe, HLL, HLLC, Marquina, MarquinaModified, Hybrid or local
        Lax-Friedrichs, plus HLLD for MHD
    addThermalFlux [BOOLEAN] [TRUE]

    charLimiting [BOOLEAN] [TRUE]
        Apply limiting for characteristic variable
    conserveAngMom [BOOLEAN] [FALSE]
        Conservative formulation for cylindrical coordinates regarding the
        toroidal momentum
    cvisc [REAL] [0.1]
        Valid Values: Unconstrained

    entropy [BOOLEAN] [FALSE]
        Entropy Fix routine for the Roe Riemann solver
    entropyFixMethod [STRING] ["HARTENHYMAN"]
        Valid Values: Unconstrained
        Entropy fix method for the Roe Riemann solver: Harten or HartenHyman
    hy_3Torder [INTEGER] [-1]
        Valid Values: -1, 1, 2, 3, 5
        Reconstruction order for eint, eele, eion, erad in HEDP simulations
    hybridOrderKappa [REAL] [0.]
        Valid Values: Unconstrained
        A constant value to determine shock strengths for hybrid order
    hydroComputeDtOption [INTEGER] [-1]
        Valid Values: -1, 0, 1
        An option where to compute hydro dt: Choices are integer values [-1, 0,
        1] as follows -1. Hydro_computeDt.F90 : the old standard way that has
        most extensive supports and well-tested 0. hy_uhd_energyFix.F90: a light
        weighted version without calling a global loop Hydro_computeDt 1.
        hy_getFaceFlux.F90  : another light weighted dt call during flux
        calculations
    order [INTEGER] [2]
        Valid Values: 1, 2, 3, 5, 6
        1st order Godunov scheme, 2nd MUSCL-Hancock scheme, or 3rd PPM, 5th WENO
    radiusGP [REAL] [2.]
        Valid Values: Unconstrained

    shockDetect [BOOLEAN] [FALSE]
        Switch to use a strong compressive shock detection
    sigmaGP [REAL] [3.]
        Valid Values: Unconstrained

    slopeLimiter [STRING] ["vanLeer"]
        Valid Values: Unconstrained
        mc, vanLeer, minmod, hybrid, limited
    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        A threshold value for an arbitrarily small number
    transOrder [INTEGER] [1]
        Valid Values: 0, 1, 2, 3, 4
        order of approximating transeverse flux derivative in data
        reconstruction
    use_3dFullCTU [BOOLEAN] [TRUE]
        Turn on/off the full CTU scheme that gives CFL <= 1 for 3D
    use_auxEintEqn [BOOLEAN] [TRUE]
        Turn on/off solving the auxilary internal energy equation
    use_avisc [BOOLEAN] [FALSE]

    use_flattening [BOOLEAN] [FALSE]
        Switch for PPM flattening
    use_gravHalfUpdate [BOOLEAN] [TRUE]
        Include gravitational accelerations to hydro coupling at n+1/2
    use_hybridOrder [BOOLEAN] [FALSE]
        Apply RH jump condition to check monotonicity of reconstructed values
    use_steepening [BOOLEAN] [FALSE]
        Switch for steepening contact discontinuities for 3rd order PPM
    use_upwindTVD [BOOLEAN] [FALSE]
        Turn on/off upwinding TVD slopes

physics/RadTrans
    useRadTrans [BOOLEAN] [FALSE]
        flag to indicate whether radiative transfer is in use

physics/TreeCol
    useTreeCol [BOOLEAN] [FALSE]
        Whether TreeCol calculations should be performed.

physics/materialProperties/Conductivity
    useConductivity [BOOLEAN] CONSTANT [FALSE]
        flags whether the conductivity material property is being used

physics/materialProperties/MagneticResistivity
    useMagneticResistivity [BOOLEAN] CONSTANT [FALSE]
        flags whether the magnetic resistivity material property is being used

physics/materialProperties/MassDiffusivity
    useMassDiffusivity [BOOLEAN] CONSTANT [FALSE]
        -- allows the mass diffusivity to be turned off at runtime, even if the
        unit is included in the simulation

physics/materialProperties/Opacity
    useOpacity [BOOLEAN] CONSTANT [FALSE]
        flags whether the Opacity unit is being used at all

physics/materialProperties/Viscosity
    useViscosity [BOOLEAN] CONSTANT [FALSE]
        flags whether the viscosity material property is being used

physics/sourceTerms/Burn
    useBurn [BOOLEAN] [FALSE]
        shall I burn?

physics/sourceTerms/Cool
    useCool [BOOLEAN] [FALSE]
        Runtime control for turning off cooling

physics/sourceTerms/Deleptonize
    threadDelepBlockList [BOOLEAN] [FALSE]

    threadDelepWithinBlock [BOOLEAN] [FALSE]

    useDeleptonize [BOOLEAN] [FALSE]


physics/sourceTerms/EnergyDeposition
    useEnergyDeposition [BOOLEAN] CONSTANT [FALSE]
        flag indicating whether to use EnergyDeposition unit

physics/sourceTerms/Flame
    useFlame [BOOLEAN] CONSTANT [FALSE]
        Whether the flame should be advanced.

physics/sourceTerms/Heat
    useHeat [BOOLEAN] [FALSE]
        runtime control for turning the heat on or off

physics/sourceTerms/Heatexchange
    useHeatexchange [BOOLEAN] CONSTANT [FALSE]


physics/sourceTerms/Ionize
    useIonize [BOOLEAN] [FALSE]
        Whether Ionize calculations should be performed.

physics/sourceTerms/Polytrope
    usePolytrope [BOOLEAN] [FALSE]
        Runtime switch for turning the polytropic eos on/off

physics/sourceTerms/PrimordialChemistry
    usePrimordialChemistry [BOOLEAN] [FALSE]


physics/sourceTerms/Stir/StirMain
    useStir [BOOLEAN] [TRUE]
        Runtime switch for turning stirring on/off

physics/sourceTerms/Stir/StirMain/StirOrig
    st_computeDt [BOOLEAN] [FALSE]

    st_decay [REAL] [.1]
        Valid Values: Unconstrained

    st_energy [REAL] [.01]
        Valid Values: Unconstrained

    st_freq [INTEGER] [1]
        Valid Values: Unconstrained

    st_reproducible [BOOLEAN] [FALSE]

    st_saveReproducible [BOOLEAN] [FALSE]

    st_seed [INTEGER] [2]
        Valid Values: Unconstrained

    st_stirmax [REAL] [62.8]
        Valid Values: Unconstrained

    st_stirmin [REAL] [31.4]
        Valid Values: Unconstrained


physics/sourceTerms/Turb
    useTurb [BOOLEAN] [TRUE]
        flags whether the Turbulence unit is being used
